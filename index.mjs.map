{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport Unary from '@stdlib/math-array-tools-unary';\n\n\n// MAIN //\n\n/**\n* Returns a function for applying a unary function to each element in a provided input array.\n*\n* @param {Function} fcn - unary function to apply\n* @param {StringArray} idtypes - list of supported input data types\n* @param {StringArray} odtypes - list of supported output data types\n* @param {string} policy - output data type policy\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be an array of supported data types\n* @throws {TypeError} third argument must be an array of supported data types\n* @throws {TypeError} fourth argument must be a supported output data type policy\n* @returns {Function} function for applying a unary function to each element in an array\n*\n* @example\n* import base from '@stdlib/math-base-special-abs';\n*\n* var dtypes = [ 'float64', 'float32', 'generic' ];\n*\n* var abs = factory( base, dtypes, dtypes, 'same' );\n* // returns <Function>\n*\n* var x = abs( [ -1.0, 2.0, -3.0, 4.0 ] );\n* // returns [ 1.0, 2.0, 3.0, 4.0 ]\n*\n* @example\n* import base from '@stdlib/math-base-special-abs';\n*\n* var dtypes = [ 'float64', 'float32', 'generic' ];\n*\n* var abs = factory( base, dtypes, dtypes, 'same' );\n*\n* var x = [ -1.0, -2.0, -3.0 ];\n* var y = [ 0.0, 0.0, 0.0 ];\n*\n* var out = abs.assign( x, y );\n* // returns [ 1.0, 2.0, 3.0 ]\n*\n* var bool = ( out === y );\n* // returns true\n*/\nfunction factory( fcn, idtypes, odtypes, policy ) {\n\tvar f = new Unary( fcn, idtypes, odtypes, policy );\n\tsetReadOnly( main, 'assign', assign );\n\treturn main;\n\n\t/**\n\t* Applies a unary function to each element in a provided input array.\n\t*\n\t* @private\n\t* @param {Collection} x - input array\n\t* @param {Options} [options] - function options\n\t* @param {string} [options.dtype] - output array data type\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} first argument must have a supported data type\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @returns {Collection} output array\n\t*/\n\tfunction main( x, options ) {\n\t\tif ( arguments.length < 2 ) {\n\t\t\treturn f.apply( x );\n\t\t}\n\t\treturn f.apply( x, options );\n\t}\n\n\t/**\n\t* Applies a unary function to each element in a provided input array and assigns results to a provided output array.\n\t*\n\t* @private\n\t* @param {Collection} x - input array\n\t* @param {Collection} out - output array\n\t* @throws {TypeError} first argument must be a collection\n\t* @throws {TypeError} first argument must have a supported data type\n\t* @throws {TypeError} second argument must be a collection\n\t* @returns {Collection} output array\n\t*/\n\tfunction assign( x, out ) {\n\t\treturn f.assign( x, out );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n"],"names":["factory","fcn","idtypes","odtypes","policy","f","Unary","setReadOnly","main","x","out","assign","options","arguments","length","apply"],"mappings":";;kNAoEA,SAASA,EAASC,EAAKC,EAASC,EAASC,GACxC,IAAIC,EAAI,IAAIC,EAAOL,EAAKC,EAASC,EAASC,GAE1C,OADAG,EAAaC,EAAM,UAkCnB,SAAiBC,EAAGC,GACnB,OAAOL,EAAEM,OAAQF,EAAGC,EACpB,IAnCMF,EAeP,SAASA,EAAMC,EAAGG,GACjB,OAAKC,UAAUC,OAAS,EAChBT,EAAEU,MAAON,GAEVJ,EAAEU,MAAON,EAAGG,EACnB,CAgBF"}